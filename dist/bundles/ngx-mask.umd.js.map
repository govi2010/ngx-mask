{"version":3,"file":"ngx-mask.umd.js","sources":["../../node_modules/tslib/tslib.es6.js","ng://ngx-mask/app/ngx-mask/config.ts","ng://ngx-mask/app/ngx-mask/mask-applier.service.ts","ng://ngx-mask/app/ngx-mask/mask.service.ts","ng://ngx-mask/app/ngx-mask/mask.directive.ts","ng://ngx-mask/app/ngx-mask/mask.pipe.ts","ng://ngx-mask/app/ngx-mask/ngx-mask.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport interface IConfig {\r\n    suffix: string;\r\n    prefix: string;\r\n    clearIfNotMatch: boolean;\r\n    showTemplate: boolean;\r\n    showMaskTyped: boolean;\r\n    shownMaskExpression: string;\r\n    dropSpecialCharacters: boolean | string[];\r\n    specialCharacters: string[];\r\n    hiddenInput: boolean | undefined;\r\n    validation: boolean;\r\n    patterns: {\r\n        [character: string]: {\r\n            pattern: RegExp;\r\n            optional?: boolean;\r\n            symbol?: string;\r\n        };\r\n    };\r\n}\r\n\r\nexport type optionsConfig = Partial<IConfig>;\r\nexport const config: InjectionToken<IConfig> = new InjectionToken('config');\r\nexport const NEW_CONFIG: InjectionToken<IConfig> = new InjectionToken('NEW_CONFIG');\r\nexport const INITIAL_CONFIG: InjectionToken<IConfig> = new InjectionToken('INITIAL_CONFIG');\r\n\r\nexport const initialConfig: IConfig = {\r\n    suffix: '',\r\n    prefix: '',\r\n    clearIfNotMatch: false,\r\n    showTemplate: false,\r\n    showMaskTyped: false,\r\n    dropSpecialCharacters: true,\r\n    hiddenInput: undefined,\r\n    shownMaskExpression: '',\r\n    validation: true,\r\n    // tslint:disable-next-line: quotemark\r\n    specialCharacters: ['-', '/', '(', ')', '.', ':', ' ', '+', ',', '@', '[', ']', '\"', \"'\"],\r\n    patterns: {\r\n        '0': {\r\n            pattern: new RegExp('\\\\d'),\r\n        },\r\n        '9': {\r\n            pattern: new RegExp('\\\\d'),\r\n            optional: true,\r\n        },\r\n        X: {\r\n            pattern: new RegExp('\\\\d'),\r\n            symbol: '*',\r\n        },\r\n        A: {\r\n            pattern: new RegExp('[a-zA-Z0-9]'),\r\n        },\r\n        S: {\r\n            pattern: new RegExp('[a-zA-Z]'),\r\n        },\r\n        d: {\r\n            pattern: new RegExp('\\\\d'),\r\n        },\r\n        m: {\r\n            pattern: new RegExp('\\\\d'),\r\n        },\r\n        M: {\r\n            pattern: new RegExp('\\\\d'),\r\n        },\r\n        H: {\r\n            pattern: new RegExp('\\\\d'),\r\n        },\r\n        h: {\r\n            pattern: new RegExp('\\\\d'),\r\n        },\r\n        s: {\r\n            pattern: new RegExp('\\\\d'),\r\n        },\r\n    },\r\n};\r\n\r\nexport const withoutValidation: string[] = [\r\n    'percent',\r\n    'Hh:m0:s0',\r\n    'Hh:m0',\r\n    'Hh',\r\n    'm0:s0',\r\n    's0',\r\n    'm0',\r\n    'separator',\r\n    'dot_separator',\r\n    'comma_separator',\r\n    'd0/M0/0000',\r\n    'd0/M0',\r\n    'd0',\r\n    'M0',\r\n];\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { config, IConfig } from './config';\r\n\r\nexport enum Separators {\r\n  SEPARATOR = 'separator',\r\n  COMMA_SEPARATOR = 'comma_separator',\r\n  DOT_SEPARATOR = 'dot_separator',\r\n  IND_COMMA_SEPARATED = 'ind_comma_separated',\r\n  INT_COMMA_SEPARATED = 'int_comma_separated',\r\n  INT_SPACE_SEPARATED = 'int_space_separated',\r\n  INT_APOSTROPHE_SEPARATED = 'int_apostrophe_separated'\r\n}\r\n\r\n@Injectable()\r\nexport class MaskApplierService {\r\n  public dropSpecialCharacters: IConfig['dropSpecialCharacters'];\r\n  public hiddenInput: IConfig['hiddenInput'];\r\n  public showTemplate!: IConfig['showTemplate'];\r\n  public clearIfNotMatch!: IConfig['clearIfNotMatch'];\r\n  public maskExpression: string = '';\r\n  public actualValue: string = '';\r\n  public shownMaskExpression: string = '';\r\n  public maskSpecialCharacters!: IConfig['specialCharacters'];\r\n  public maskAvailablePatterns!: IConfig['patterns'];\r\n  public prefix!: IConfig['prefix'];\r\n  public suffix!: IConfig['suffix'];\r\n  public customPattern!: IConfig['patterns'];\r\n  public ipError?: boolean;\r\n  public showMaskTyped!: IConfig['showMaskTyped'];\r\n  public validation: IConfig['validation'];\r\n\r\n  private _shift!: Set<number>;\r\n\r\n  public constructor(@Inject(config) protected _config: IConfig) {\r\n    this._shift = new Set();\r\n    this.clearIfNotMatch = this._config.clearIfNotMatch;\r\n    this.dropSpecialCharacters = this._config.dropSpecialCharacters;\r\n    this.maskSpecialCharacters = this._config!.specialCharacters;\r\n    this.maskAvailablePatterns = this._config.patterns;\r\n    this.prefix = this._config.prefix;\r\n    this.suffix = this._config.suffix;\r\n    this.hiddenInput = this._config.hiddenInput;\r\n    this.showMaskTyped = this._config.showMaskTyped;\r\n    this.validation = this._config.validation;\r\n  }\r\n\r\n  // tslint:disable-next-line:no-any\r\n  public applyMaskWithPattern(inputValue: string, maskAndPattern: [string, IConfig['patterns']]): string {\r\n    const [mask, customPattern] = maskAndPattern;\r\n    this.customPattern = customPattern;\r\n    return this.applyMask(inputValue, mask);\r\n  }\r\n\r\n  public applyMask(\r\n    inputValue: string,\r\n    maskExpression: string,\r\n    position: number = 0,\r\n    cb: Function = () => {\r\n    },\r\n  ): string {\r\n    if (inputValue === undefined || inputValue === null || maskExpression === undefined) {\r\n      return '';\r\n    }\r\n    let cursor: number = 0;\r\n    let result: string = ``;\r\n    let multi: boolean = false;\r\n    let backspaceShift: boolean = false;\r\n    let shift: number = 1;\r\n    let stepBack: boolean = false;\r\n    if (inputValue.slice(0, this.prefix.length) === this.prefix) {\r\n      inputValue = inputValue.slice(this.prefix.length, inputValue.length);\r\n    }\r\n    const inputArray: string[] = inputValue.toString().split('');\r\n    if (maskExpression === 'IP') {\r\n      this.ipError = !!(inputArray.filter((i: string) => i === '.').length < 3 && inputArray.length < 7);\r\n      maskExpression = '099.099.099.099';\r\n    }\r\n    if (maskExpression.startsWith('percent')) {\r\n      if (inputValue.match('[a-z]|[A-Z]') || inputValue.match(/[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,\\/]/)) {\r\n        inputValue = this._checkInput(inputValue);\r\n        const precision: number = this.getPrecision(maskExpression);\r\n        inputValue = this.checkInputPrecision(inputValue, precision, '.');\r\n      }\r\n      if (inputValue.indexOf('.') > 0 && !this.percentage(inputValue.substring(0, inputValue.indexOf('.')))) {\r\n        const base: string = inputValue.substring(0, inputValue.indexOf('.') - 1);\r\n        inputValue = `${base}${inputValue.substring(inputValue.indexOf('.'), inputValue.length)}`;\r\n      }\r\n      if (this.percentage(inputValue)) {\r\n        result = inputValue;\r\n      } else {\r\n        result = inputValue.substring(0, inputValue.length - 1);\r\n      }\r\n    } else if (\r\n      maskExpression.startsWith(Separators.SEPARATOR) ||\r\n      maskExpression.startsWith(Separators.DOT_SEPARATOR) ||\r\n      maskExpression.startsWith(Separators.COMMA_SEPARATOR) ||\r\n      maskExpression.startsWith(Separators.IND_COMMA_SEPARATED) ||\r\n      maskExpression.startsWith(Separators.INT_APOSTROPHE_SEPARATED) ||\r\n      maskExpression.startsWith(Separators.INT_COMMA_SEPARATED) ||\r\n      maskExpression.startsWith(Separators.INT_SPACE_SEPARATED)\r\n    ) {\r\n      if (\r\n        inputValue.match('[wÐ°-ÑÐ-Ð¯]') ||\r\n        inputValue.match('[ÐÑÐ-Ñ]') ||\r\n        inputValue.match('[a-z]|[A-Z]') ||\r\n        inputValue.match(/[-@#!$%\\\\^&*()_Â£Â¬'+|~=`{}\\[\\]:\";<>.?\\/]/)\r\n      ) {\r\n        inputValue = this._checkInput(inputValue);\r\n      }\r\n      const precision: number = this.getPrecision(maskExpression);\r\n      let strForSep: string;\r\n      if (maskExpression.startsWith(Separators.SEPARATOR)) {\r\n        if (\r\n          inputValue.includes(',') &&\r\n          inputValue.endsWith(',') &&\r\n          inputValue.indexOf(',') !== inputValue.lastIndexOf(',')\r\n        ) {\r\n          inputValue = inputValue.substring(0, inputValue.length - 1);\r\n        }\r\n        inputValue = inputValue.replace('.', ' ');\r\n      }\r\n      if (maskExpression.startsWith(Separators.DOT_SEPARATOR)) {\r\n        if (\r\n          inputValue.indexOf('.') !== -1 &&\r\n          inputValue.indexOf('.') === inputValue.lastIndexOf('.') &&\r\n          (inputValue.indexOf('.') > 3 || inputValue.length < 6)\r\n        ) {\r\n          inputValue = inputValue.replace('.', ',');\r\n        }\r\n        inputValue =\r\n          inputValue.length > 1 && inputValue[0] === '0' && inputValue[1] !== ','\r\n            ? inputValue.slice(1, inputValue.length)\r\n            : inputValue;\r\n      }\r\n      if (maskExpression.startsWith(Separators.COMMA_SEPARATOR)) {\r\n        inputValue =\r\n          inputValue.length > 1 && inputValue[0] === '0' && inputValue[1] !== '.'\r\n            ? inputValue.slice(1, inputValue.length)\r\n            : inputValue;\r\n      }\r\n      if (maskExpression.startsWith(Separators.SEPARATOR)) {\r\n        if (inputValue.match(/[@#!$%^&*()_+|~=`{}\\[\\]:.\";<>?\\/]/)) {\r\n          inputValue = inputValue.substring(0, inputValue.length - 1);\r\n        }\r\n        inputValue = this.checkInputPrecision(inputValue, precision, ',');\r\n        strForSep = inputValue.replace(/\\s/g, '');\r\n        result = this.separator(strForSep, ' ', ',', precision);\r\n      } else if (maskExpression.startsWith(Separators.DOT_SEPARATOR)) {\r\n        if (inputValue.match(/[@#!$%^&*()_+|~=`{}\\[\\]:\\s\";<>?\\/]/)) {\r\n          inputValue = inputValue.substring(0, inputValue.length - 1);\r\n        }\r\n        inputValue = this.checkInputPrecision(inputValue, precision, ',');\r\n        strForSep = inputValue.replace(/\\./g, '');\r\n        result = this.separator(strForSep, '.', ',', precision);\r\n      } else if (maskExpression.startsWith(Separators.COMMA_SEPARATOR)) {\r\n        strForSep = inputValue.replace(/,/g, '');\r\n        result = this.separator(strForSep, ',', '.', precision);\r\n      } else if (maskExpression.startsWith(Separators.IND_COMMA_SEPARATED)) {\r\n        strForSep = inputValue.replace(/,/g, '');\r\n        result = this.currencySeparator(strForSep, ',', '.', precision, true);\r\n      } else if (maskExpression.startsWith(Separators.INT_SPACE_SEPARATED)) {\r\n        strForSep = inputValue.replace(/[ ,']/g, '');\r\n        result = this.currencySeparator(strForSep, ' ', '.', precision);\r\n      } else if (maskExpression.startsWith(Separators.INT_COMMA_SEPARATED)) {\r\n        strForSep = inputValue.replace(/,/g, '');\r\n        result = this.currencySeparator(strForSep, ',', '.', precision);\r\n      } else if (maskExpression.startsWith(Separators.INT_APOSTROPHE_SEPARATED)) {\r\n        strForSep = inputValue.replace(/[ ,']/g, '');\r\n        result = this.currencySeparator(strForSep, '\\'', '.', precision);\r\n      }\r\n\r\n      const commaShift: number = result.indexOf(',') - inputValue.indexOf(',');\r\n      const shiftStep: number = result.length - inputValue.length;\r\n\r\n      // position shifting issue fixed for custom separators\r\n      if (!(maskExpression.startsWith(Separators.IND_COMMA_SEPARATED) ||\r\n        maskExpression.startsWith(Separators.INT_APOSTROPHE_SEPARATED) ||\r\n        maskExpression.startsWith(Separators.INT_COMMA_SEPARATED) ||\r\n        maskExpression.startsWith(Separators.INT_SPACE_SEPARATED))) {\r\n        if (shiftStep > 0 && result[position] !== ',') {\r\n          backspaceShift = true;\r\n          let _shift: number = 0;\r\n          do {\r\n            this._shift.add(position + _shift);\r\n            _shift++;\r\n          } while (_shift < shiftStep);\r\n        } else if (\r\n          (commaShift !== 0 && position > 0 && !(result.indexOf(',') >= position && position > 3)) ||\r\n          (!(result.indexOf('.') >= position && position > 3) && shiftStep <= 0)\r\n        ) {\r\n          this._shift.clear();\r\n          backspaceShift = true;\r\n          shift = shiftStep;\r\n          position += shiftStep;\r\n          this._shift.add(position);\r\n        } else {\r\n          this._shift.clear();\r\n        }\r\n      }\r\n\r\n    } else {\r\n      for (\r\n        // tslint:disable-next-line\r\n        let i: number = 0, inputSymbol: string = inputArray[0];\r\n        i < inputArray.length;\r\n        i++, inputSymbol = inputArray[i]\r\n      ) {\r\n        if (cursor === maskExpression.length) {\r\n          break;\r\n        }\r\n        if (this._checkSymbolMask(inputSymbol, maskExpression[cursor]) && maskExpression[cursor + 1] === '?') {\r\n          result += inputSymbol;\r\n          cursor += 2;\r\n        } else if (\r\n          maskExpression[cursor + 1] === '*' &&\r\n          multi &&\r\n          this._checkSymbolMask(inputSymbol, maskExpression[cursor + 2])\r\n        ) {\r\n          result += inputSymbol;\r\n          cursor += 3;\r\n          multi = false;\r\n        } else if (\r\n          this._checkSymbolMask(inputSymbol, maskExpression[cursor]) &&\r\n          maskExpression[cursor + 1] === '*'\r\n        ) {\r\n          result += inputSymbol;\r\n          multi = true;\r\n        } else if (\r\n          maskExpression[cursor + 1] === '?' &&\r\n          this._checkSymbolMask(inputSymbol, maskExpression[cursor + 2])\r\n        ) {\r\n          result += inputSymbol;\r\n          cursor += 3;\r\n        } else if (\r\n          this._checkSymbolMask(inputSymbol, maskExpression[cursor]) ||\r\n          (this.hiddenInput &&\r\n            this.maskAvailablePatterns[maskExpression[cursor]] &&\r\n            this.maskAvailablePatterns[maskExpression[cursor]].symbol === inputSymbol)\r\n        ) {\r\n          if (maskExpression[cursor] === 'H') {\r\n            if (Number(inputSymbol) > 2) {\r\n              cursor += 1;\r\n              const shiftStep: number = /[*?]/g.test(maskExpression.slice(0, cursor))\r\n                ? inputArray.length\r\n                : cursor;\r\n              this._shift.add(shiftStep + this.prefix.length || 0);\r\n              i--;\r\n              continue;\r\n            }\r\n          }\r\n          if (maskExpression[cursor] === 'h') {\r\n            if (result === '2' && Number(inputSymbol) > 3) {\r\n              cursor += 1;\r\n              i--;\r\n              continue;\r\n            }\r\n          }\r\n          if (maskExpression[cursor] === 'm') {\r\n            if (Number(inputSymbol) > 5) {\r\n              cursor += 1;\r\n              const shiftStep: number = /[*?]/g.test(maskExpression.slice(0, cursor))\r\n                ? inputArray.length\r\n                : cursor;\r\n              this._shift.add(shiftStep + this.prefix.length || 0);\r\n              i--;\r\n              continue;\r\n            }\r\n          }\r\n          if (maskExpression[cursor] === 's') {\r\n            if (Number(inputSymbol) > 5) {\r\n              cursor += 1;\r\n              const shiftStep: number = /[*?]/g.test(maskExpression.slice(0, cursor))\r\n                ? inputArray.length\r\n                : cursor;\r\n              this._shift.add(shiftStep + this.prefix.length || 0);\r\n              i--;\r\n              continue;\r\n            }\r\n          }\r\n          if (maskExpression[cursor - 1] === 'd') {\r\n            if (Number(inputValue.slice(cursor - 1, cursor + 1)) > 31 || inputValue[cursor] === '/') {\r\n              cursor += 1;\r\n              const shiftStep: number = /[*?]/g.test(maskExpression.slice(0, cursor))\r\n                ? inputArray.length\r\n                : cursor;\r\n              this._shift.add(shiftStep + this.prefix.length || 0);\r\n              i--;\r\n              continue;\r\n            }\r\n          }\r\n          if (maskExpression[cursor] === 'M') {\r\n            if (\r\n              (inputValue[cursor - 1] === '/' &&\r\n                (Number(inputValue.slice(cursor, cursor + 2)) > 12 ||\r\n                  inputValue[cursor + 1] === '/')) ||\r\n              (Number(inputValue.slice(cursor - 1, cursor + 1)) > 12 ||\r\n                Number(inputValue.slice(0, 2)) > 31 ||\r\n                (Number(inputValue[cursor - 1]) > 1 && inputValue[cursor - 2] === '/'))\r\n            ) {\r\n              cursor += 1;\r\n              const shiftStep: number = /[*?]/g.test(maskExpression.slice(0, cursor))\r\n                ? inputArray.length\r\n                : cursor;\r\n              this._shift.add(shiftStep + this.prefix.length || 0);\r\n              i--;\r\n              continue;\r\n            }\r\n          }\r\n\r\n          result += inputSymbol;\r\n          cursor++;\r\n        } else if (this.maskSpecialCharacters.indexOf(maskExpression[cursor]) !== -1) {\r\n          result += maskExpression[cursor];\r\n          cursor++;\r\n          const shiftStep: number = /[*?]/g.test(maskExpression.slice(0, cursor))\r\n            ? inputArray.length\r\n            : cursor;\r\n          this._shift.add(shiftStep + this.prefix.length || 0);\r\n          i--;\r\n        } else if (\r\n          this.maskSpecialCharacters.indexOf(inputSymbol) > -1 &&\r\n          this.maskAvailablePatterns[maskExpression[cursor]] &&\r\n          this.maskAvailablePatterns[maskExpression[cursor]].optional\r\n        ) {\r\n          cursor++;\r\n          i--;\r\n        } else if (\r\n          this.maskExpression[cursor + 1] === '*' &&\r\n          this._findSpecialChar(this.maskExpression[cursor + 2]) &&\r\n          this._findSpecialChar(inputSymbol) === this.maskExpression[cursor + 2] &&\r\n          multi\r\n        ) {\r\n          cursor += 3;\r\n          result += inputSymbol;\r\n        } else if (\r\n          this.maskExpression[cursor + 1] === '?' &&\r\n          this._findSpecialChar(this.maskExpression[cursor + 2]) &&\r\n          this._findSpecialChar(inputSymbol) === this.maskExpression[cursor + 2] &&\r\n          multi\r\n        ) {\r\n          cursor += 3;\r\n          result += inputSymbol;\r\n        } else if (\r\n          this.showMaskTyped &&\r\n          this.maskSpecialCharacters.indexOf(inputSymbol) < 0 &&\r\n          inputSymbol !== '_'\r\n        ) {\r\n          stepBack = true;\r\n        }\r\n      }\r\n    }\r\n    if (\r\n      result.length + 1 === maskExpression.length &&\r\n      this.maskSpecialCharacters.indexOf(maskExpression[maskExpression.length - 1]) !== -1\r\n    ) {\r\n      result += maskExpression[maskExpression.length - 1];\r\n    }\r\n\r\n    let newPosition: number = position + 1;\r\n\r\n    while (this._shift.has(newPosition)) {\r\n      shift++;\r\n      newPosition++;\r\n    }\r\n\r\n    let actualShift: number = this._shift.has(position) ? shift : 0;\r\n    if (stepBack) {\r\n      actualShift--;\r\n    }\r\n\r\n    cb(actualShift, backspaceShift);\r\n    if (shift < 0) {\r\n      this._shift.clear();\r\n    }\r\n    let res: string = this.suffix ? `${this.prefix}${result}${this.suffix}` : `${this.prefix}${result}`;\r\n    if (result.length === 0) {\r\n      res = `${this.prefix}${result}`;\r\n    }\r\n    return res;\r\n  }\r\n\r\n  public _findSpecialChar(inputSymbol: string): undefined | string {\r\n    return this.maskSpecialCharacters.find((val: string) => val === inputSymbol);\r\n  }\r\n\r\n  protected _checkSymbolMask(inputSymbol: string, maskSymbol: string): boolean {\r\n    this.maskAvailablePatterns = this.customPattern ? this.customPattern : this.maskAvailablePatterns;\r\n    return (\r\n      this.maskAvailablePatterns[maskSymbol] &&\r\n      this.maskAvailablePatterns[maskSymbol].pattern &&\r\n      this.maskAvailablePatterns[maskSymbol].pattern.test(inputSymbol)\r\n    );\r\n  }\r\n\r\n  private separator = (str: string, char: string, decimalChar: string, precision: number) => {\r\n    str += '';\r\n    const x: string[] = str.split(decimalChar);\r\n    const decimals: string = x.length > 1 ? `${decimalChar}${x[1]}` : '';\r\n    let res: string = x[0];\r\n    const rgx: RegExp = /(\\d+)(\\d{3})/;\r\n    while (rgx.test(res)) {\r\n      res = res.replace(rgx, '$1' + char + '$2');\r\n    }\r\n    if (precision === undefined) {\r\n      return res + decimals;\r\n    } else if (precision === 0) {\r\n      return res;\r\n    }\r\n    return res + decimals.substr(0, precision + 1);\r\n  };\r\n\r\n  private currencySeparator = (str: string, char: string, decimalChar: string, precision: number,\r\n                               indFormat: boolean = false) => {\r\n    str += '';\r\n    const x: string[] = str.split(decimalChar);\r\n    const decimals: string = x.length > 1 ? `${decimalChar}${x[1]}` : '';\r\n    const baseNum: string = x[0];\r\n    let lastThree: string = baseNum.substring(baseNum.length - 3);\r\n    const otherNumbers: string = baseNum.substring(0, baseNum.length - 3);\r\n    if (otherNumbers !== '') {\r\n      lastThree = char + lastThree;\r\n    }\r\n    const res: string = (indFormat ? otherNumbers.replace(/\\B(?=(\\d{2})+(?!\\d))/g, char) :\r\n      otherNumbers.replace(/\\B(?=(\\d{3})+(?!\\d))/g, char)) + lastThree;\r\n    if (precision === undefined) {\r\n      return res + decimals;\r\n    } else if (precision === 0) {\r\n      return res;\r\n    }\r\n    return res + decimals.substr(0, precision + 1);\r\n  };\r\n\r\n  private percentage = (str: string): boolean => {\r\n    return Number(str) >= 0 && Number(str) <= 100;\r\n  };\r\n\r\n  private getPrecision = (maskExpression: string): number => {\r\n    const x: string[] = maskExpression.split('.');\r\n    if (x.length > 1) {\r\n      return Number(x[x.length - 1]);\r\n    }\r\n    return Infinity;\r\n  };\r\n\r\n  private checkInputPrecision = (inputValue: string, precision: number, decimalMarker: string): string => {\r\n    if (precision < Infinity) {\r\n      let precisionRegEx: RegExp;\r\n\r\n      if (decimalMarker === '.') {\r\n        precisionRegEx = new RegExp(`\\\\.\\\\d{${precision}}.*$`);\r\n      } else {\r\n        precisionRegEx = new RegExp(`,\\\\d{${precision}}.*$`);\r\n      }\r\n\r\n      const precisionMatch: RegExpMatchArray | null = inputValue.match(precisionRegEx);\r\n      if (precisionMatch && precisionMatch[0].length - 1 > precision) {\r\n        inputValue = inputValue.substring(0, inputValue.length - 1);\r\n      } else if (precision === 0 && inputValue.endsWith(decimalMarker)) {\r\n        inputValue = inputValue.substring(0, inputValue.length - 1);\r\n      }\r\n    }\r\n    return inputValue;\r\n  };\r\n\r\n  private _checkInput(str: string): string {\r\n    return str\r\n      .split('')\r\n      .filter((i: string) => i.match('\\\\d') || i === '.' || i === ',')\r\n      .join('');\r\n  }\r\n\r\n  // tslint:disable-next-line: max-file-line-count\r\n}\r\n","import { ElementRef, Inject, Injectable, Renderer2 } from '@angular/core';\r\nimport { config, IConfig } from './config';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { MaskApplierService, Separators } from './mask-applier.service';\r\n\r\n@Injectable()\r\nexport class MaskService extends MaskApplierService {\r\n    public validation: boolean = true;\r\n    public maskExpression: string = '';\r\n    public isNumberValue: boolean = false;\r\n    public showMaskTyped: boolean = false;\r\n    public maskIsShown: string = '';\r\n    public selStart: number | null = null;\r\n    public selEnd: number | null = null;\r\n    protected _formElement: HTMLInputElement;\r\n    // tslint:disable-next-line\r\n    public onChange = (_: any) => {};\r\n\r\n    public constructor(\r\n        // tslint:disable-next-line\r\n        @Inject(DOCUMENT) private document: any,\r\n        @Inject(config) protected _config: IConfig,\r\n        private _elementRef: ElementRef,\r\n        private _renderer: Renderer2\r\n    ) {\r\n        super(_config);\r\n        this._formElement = this._elementRef.nativeElement;\r\n    }\r\n\r\n    // tslint:disable-next-line:cyclomatic-complexity\r\n    public applyMask(\r\n        inputValue: string,\r\n        maskExpression: string,\r\n        position: number = 0,\r\n        cb: Function = () => {}\r\n    ): string {\r\n        if (!maskExpression) {\r\n            return inputValue;\r\n        }\r\n        this.maskIsShown = this.showMaskTyped ? this.showMaskInInput() : '';\r\n        if (this.maskExpression === 'IP' && this.showMaskTyped) {\r\n            this.maskIsShown = this.showMaskInInput(inputValue || '#');\r\n        }\r\n        if (!inputValue && this.showMaskTyped) {\r\n            this.formControlResult(this.prefix);\r\n            return this.prefix + this.maskIsShown;\r\n        }\r\n        const getSymbol: string = !!inputValue && typeof this.selStart === 'number' ? inputValue[this.selStart] : '';\r\n        let newInputValue: string = '';\r\n        if (this.hiddenInput !== undefined) {\r\n            let actualResult: string[] = this.actualValue.split('');\r\n            inputValue !== '' && actualResult.length\r\n                ? typeof this.selStart === 'number' && typeof this.selEnd === 'number'\r\n                    ? inputValue.length > actualResult.length\r\n                        ? actualResult.splice(this.selStart, 0, getSymbol)\r\n                        : inputValue.length < actualResult.length\r\n                        ? actualResult.length - inputValue.length === 1\r\n                            ? actualResult.splice(this.selStart - 1, 1)\r\n                            : actualResult.splice(this.selStart, this.selEnd - this.selStart)\r\n                        : null\r\n                    : null\r\n                : (actualResult = []);\r\n            newInputValue = this.actualValue.length ? this.shiftTypedSymbols(actualResult.join('')) : inputValue;\r\n        }\r\n        newInputValue = Boolean(newInputValue) && newInputValue.length ? newInputValue : inputValue;\r\n        const result: string = super.applyMask(newInputValue, maskExpression, position, cb);\r\n        this.actualValue = this.getActualValue(result);\r\n\r\n        if (\r\n            (this.maskExpression.startsWith(Separators.SEPARATOR) ||\r\n                this.maskExpression.startsWith(Separators.DOT_SEPARATOR)) &&\r\n            this.dropSpecialCharacters === true\r\n        ) {\r\n            this.maskSpecialCharacters = this.maskSpecialCharacters.filter((item: string) => item !== ',');\r\n        }\r\n        if (this.maskExpression.startsWith(Separators.COMMA_SEPARATOR) && this.dropSpecialCharacters === true) {\r\n            this.maskSpecialCharacters = this.maskSpecialCharacters.filter((item: string) => item !== '.');\r\n        }\r\n\r\n        this.formControlResult(result);\r\n\r\n        if (!this.showMaskTyped) {\r\n            if (this.hiddenInput) {\r\n                return result && result.length ? this.hideInput(result, this.maskExpression) : result;\r\n            }\r\n            return result;\r\n        }\r\n        const resLen: number = result.length;\r\n        const prefNmask: string = this.prefix + this.maskIsShown;\r\n        return result + (this.maskExpression === 'IP' ? prefNmask : prefNmask.slice(resLen));\r\n    }\r\n\r\n    public applyValueChanges(position: number = 0, cb: Function = () => {}): void {\r\n        this._formElement.value = this.applyMask(this._formElement.value, this.maskExpression, position, cb);\r\n        if (this._formElement === this.document.activeElement) {\r\n            return;\r\n        }\r\n        this.clearIfNotMatchFn();\r\n    }\r\n\r\n    public hideInput(inputValue: string, maskExpression: string): string {\r\n        return inputValue\r\n            .split('')\r\n            .map((curr: string, index: number) => {\r\n                if (\r\n                    this.maskAvailablePatterns &&\r\n                    this.maskAvailablePatterns[maskExpression[index]] &&\r\n                    this.maskAvailablePatterns[maskExpression[index]].symbol\r\n                ) {\r\n                    return this.maskAvailablePatterns[maskExpression[index]].symbol;\r\n                }\r\n                return curr;\r\n            })\r\n            .join('');\r\n    }\r\n\r\n    // this function is not necessary, it checks result against maskExpression\r\n    public getActualValue(res: string): string {\r\n        const compare: string[] = res\r\n            .split('')\r\n            .filter(\r\n                (symbol: string, i: number) =>\r\n                    this._checkSymbolMask(symbol, this.maskExpression[i]) ||\r\n                    (this.maskSpecialCharacters.includes(this.maskExpression[i]) && symbol === this.maskExpression[i])\r\n            );\r\n        if (compare.join('') === res) {\r\n            return compare.join('');\r\n        }\r\n        return res;\r\n    }\r\n\r\n    public shiftTypedSymbols(inputValue: string): string {\r\n        let symbolToReplace: string = '';\r\n        const newInputValue: string[] =\r\n            (inputValue &&\r\n                inputValue.split('').map((currSymbol: string, index: number) => {\r\n                    if (\r\n                        this.maskSpecialCharacters.includes(inputValue[index + 1]) &&\r\n                        inputValue[index + 1] !== this.maskExpression[index + 1]\r\n                    ) {\r\n                        symbolToReplace = currSymbol;\r\n                        return inputValue[index + 1];\r\n                    }\r\n                    if (symbolToReplace.length) {\r\n                        const replaceSymbol: string = symbolToReplace;\r\n                        symbolToReplace = '';\r\n                        return replaceSymbol;\r\n                    }\r\n                    return currSymbol;\r\n                })) ||\r\n            [];\r\n        return newInputValue.join('');\r\n    }\r\n\r\n    public showMaskInInput(inputVal?: string): string {\r\n        if (this.showMaskTyped && !!this.shownMaskExpression) {\r\n            if (this.maskExpression.length !== this.shownMaskExpression.length) {\r\n                throw new Error('Mask expression must match mask placeholder length');\r\n            } else {\r\n                return this.shownMaskExpression;\r\n            }\r\n        } else if (this.showMaskTyped) {\r\n            if (inputVal) {\r\n                return this._checkForIp(inputVal);\r\n            }\r\n            return this.maskExpression.replace(/\\w/g, '_');\r\n        }\r\n        return '';\r\n    }\r\n\r\n    public clearIfNotMatchFn(): void {\r\n        if (\r\n            this.clearIfNotMatch &&\r\n            this.prefix.length + this.maskExpression.length + this.suffix.length !== this._formElement.value.length\r\n        ) {\r\n            this.formElementProperty = ['value', ''];\r\n            this.applyMask(this._formElement.value, this.maskExpression);\r\n        }\r\n    }\r\n\r\n    public set formElementProperty([name, value]: [string, string | boolean]) {\r\n        this._renderer.setProperty(this._formElement, name, value);\r\n    }\r\n\r\n    public checkSpecialCharAmount(mask: string): number {\r\n        const chars: string[] = mask.split('').filter((item: string) => this._findSpecialChar(item));\r\n        return chars.length;\r\n    }\r\n\r\n    private _checkForIp(inputVal: string): string {\r\n        if (inputVal === '#') {\r\n            return '_._._._';\r\n        }\r\n        const arr: string[] = [];\r\n        for (let i: number = 0; i < inputVal.length; i++) {\r\n            if (inputVal[i].match('\\\\d')) {\r\n                arr.push(inputVal[i]);\r\n            }\r\n        }\r\n        if (arr.length <= 3) {\r\n            return '_._._';\r\n        }\r\n        if (arr.length > 3 && arr.length <= 6) {\r\n            return '_._';\r\n        }\r\n        if (arr.length > 6 && arr.length <= 9) {\r\n            return '_';\r\n        }\r\n        if (arr.length > 9 && arr.length <= 12) {\r\n            return '';\r\n        }\r\n        return '';\r\n    }\r\n\r\n    private formControlResult(inputValue: string): void {\r\n        if (Array.isArray(this.dropSpecialCharacters)) {\r\n            this.onChange(\r\n                this._removeMask(this._removeSuffix(this._removePrefix(inputValue)), this.dropSpecialCharacters)\r\n            );\r\n        } else if (this.dropSpecialCharacters) {\r\n            this.onChange(this._checkSymbols(inputValue));\r\n        } else {\r\n            this.onChange(this._removeSuffix(this._removePrefix(inputValue)));\r\n        }\r\n    }\r\n\r\n    private _removeMask(value: string, specialCharactersForRemove: string[]): string {\r\n        return value ? value.replace(this._regExpForRemove(specialCharactersForRemove), '') : value;\r\n    }\r\n\r\n    private _removePrefix(value: string): string {\r\n        if (!this.prefix) {\r\n            return value;\r\n        }\r\n        return value ? value.replace(this.prefix, '') : value;\r\n    }\r\n\r\n    private _removeSuffix(value: string): string {\r\n        if (!this.suffix) {\r\n            return value;\r\n        }\r\n        return value ? value.replace(this.suffix, '') : value;\r\n    }\r\n\r\n    private _regExpForRemove(specialCharactersForRemove: string[]): RegExp {\r\n        return new RegExp(specialCharactersForRemove.map((item: string) => `\\\\${item}`).join('|'), 'gi');\r\n    }\r\n\r\n    private _checkSymbols(result: string): string | number | undefined | null {\r\n        // TODO should simplify this code\r\n        let separatorValue: number | null = this.testFn(Separators.SEPARATOR, this.maskExpression);\r\n        if (separatorValue && this.isNumberValue) {\r\n            return result === ''\r\n                ? result\r\n                : result === ','\r\n                ? null\r\n                : this._checkPrecision(\r\n                      this.maskExpression,\r\n                      this._removeMask(\r\n                          this._removeSuffix(this._removePrefix(result)),\r\n                          this.maskSpecialCharacters\r\n                      ).replace(',', '.')\r\n                  );\r\n        }\r\n        separatorValue = this.testFn(Separators.DOT_SEPARATOR, this.maskExpression);\r\n        if (separatorValue && this.isNumberValue) {\r\n            return result === ''\r\n                ? result\r\n                : result === ','\r\n                ? null\r\n                : this._checkPrecision(\r\n                      this.maskExpression,\r\n                      this._removeMask(\r\n                          this._removeSuffix(this._removePrefix(result)),\r\n                          this.maskSpecialCharacters\r\n                      ).replace(',', '.')\r\n                  );\r\n        }\r\n        separatorValue = this.testFn(Separators.COMMA_SEPARATOR, this.maskExpression);\r\n        if (separatorValue && this.isNumberValue) {\r\n            return result === ''\r\n                ? result\r\n                : result === '.'\r\n                ? null\r\n                : this._checkPrecision(\r\n                      this.maskExpression,\r\n                      this._removeMask(this._removeSuffix(this._removePrefix(result)), this.maskSpecialCharacters)\r\n                  );\r\n        }\r\n        if (this.isNumberValue) {\r\n            return result === ''\r\n                ? result\r\n                : Number(this._removeMask(this._removeSuffix(this._removePrefix(result)), this.maskSpecialCharacters));\r\n        } else if (\r\n            this._removeMask(this._removeSuffix(this._removePrefix(result)), this.maskSpecialCharacters).indexOf(\r\n                ','\r\n            ) !== -1\r\n        ) {\r\n            return this._removeMask(this._removeSuffix(this._removePrefix(result)), this.maskSpecialCharacters).replace(\r\n                ',',\r\n                '.'\r\n            );\r\n        } else {\r\n            return this._removeMask(this._removeSuffix(this._removePrefix(result)), this.maskSpecialCharacters);\r\n        }\r\n    }\r\n\r\n    // TODO should think about helpers\r\n    private testFn(baseSeparator: string, maskExpretion: string): number | null {\r\n        const matcher: RegExpMatchArray | null = maskExpretion.match(new RegExp(`^${baseSeparator}\\\\.([^d]*)`));\r\n        return matcher ? Number(matcher[1]) : null;\r\n    }\r\n\r\n    private _checkPrecision(separatorExpression: string, separatorValue: string): number | string {\r\n        if (separatorExpression.indexOf('2') > 0) {\r\n            return Number(separatorValue).toFixed(2);\r\n        }\r\n        return Number(separatorValue);\r\n    }\r\n}\r\n","import { ControlValueAccessor, FormControl, NG_VALIDATORS, NG_VALUE_ACCESSOR, ValidationErrors } from '@angular/forms';\r\nimport { CustomKeyboardEvent } from './custom-keyboard-event';\r\nimport { Directive, forwardRef, HostListener, Inject, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { config, IConfig, withoutValidation } from './config';\r\nimport { MaskService } from './mask.service';\r\nimport { Separators } from './mask-applier.service';\r\n\r\n@Directive({\r\n  selector: '[mask]',\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => MaskDirective),\r\n      multi: true,\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => MaskDirective),\r\n      multi: true,\r\n    },\r\n    MaskService,\r\n  ],\r\n})\r\nexport class MaskDirective implements ControlValueAccessor, OnChanges {\r\n  @Input('mask') public maskExpression: string = '';\r\n  @Input() public specialCharacters: IConfig['specialCharacters'] = [];\r\n  @Input() public patterns: IConfig['patterns'] = {};\r\n  @Input() public prefix: IConfig['prefix'] = '';\r\n  @Input() public suffix: IConfig['suffix'] = '';\r\n  @Input() public dropSpecialCharacters: IConfig['dropSpecialCharacters'] | null = null;\r\n  @Input() public hiddenInput: IConfig['hiddenInput'] | null = null;\r\n  @Input() public showMaskTyped: IConfig['showMaskTyped'] | null = null;\r\n  @Input() public shownMaskExpression: IConfig['shownMaskExpression'] | null = null;\r\n  @Input() public showTemplate: IConfig['showTemplate'] | null = null;\r\n  @Input() public clearIfNotMatch: IConfig['clearIfNotMatch'] | null = null;\r\n  @Input() public validation: IConfig['validation'] | null = null;\r\n  private _maskValue!: string;\r\n  private _inputValue!: string;\r\n  private _position: number | null = null;\r\n  // tslint:disable-next-line\r\n  private _start!: number;\r\n  private _end!: number;\r\n  private _code!: string;\r\n  // tslint:disable-next-line\r\n  public onChange = (_: any) => {\r\n  };\r\n  public onTouch = () => {\r\n  };\r\n\r\n  public constructor(\r\n    // tslint:disable-next-line\r\n    @Inject(DOCUMENT) private document: any,\r\n    private _maskService: MaskService,\r\n    @Inject(config) protected _config: IConfig,\r\n  ) {\r\n  }\r\n\r\n  public ngOnChanges(changes: SimpleChanges): void {\r\n    // tslint:disable-next-line:max-line-length\r\n    const {\r\n      maskExpression,\r\n      specialCharacters,\r\n      patterns,\r\n      prefix,\r\n      suffix,\r\n      dropSpecialCharacters,\r\n      hiddenInput,\r\n      showMaskTyped,\r\n      shownMaskExpression,\r\n      showTemplate,\r\n      clearIfNotMatch,\r\n      validation,\r\n    } = changes;\r\n    if (maskExpression) {\r\n      this._maskValue = changes.maskExpression.currentValue || '';\r\n    }\r\n    if (specialCharacters) {\r\n      if (\r\n        !specialCharacters.currentValue ||\r\n        !Array.isArray(specialCharacters.currentValue) ||\r\n        (Array.isArray(specialCharacters.currentValue) && !specialCharacters.currentValue.length)\r\n      ) {\r\n        return;\r\n      }\r\n      this._maskService.maskSpecialCharacters = changes.specialCharacters.currentValue || '';\r\n    }\r\n    if (patterns) {\r\n      this._maskService.maskAvailablePatterns = patterns.currentValue;\r\n    }\r\n    if (prefix) {\r\n      this._maskService.prefix = prefix.currentValue;\r\n    }\r\n    if (suffix) {\r\n      this._maskService.suffix = suffix.currentValue;\r\n    }\r\n    if (dropSpecialCharacters) {\r\n      this._maskService.dropSpecialCharacters = dropSpecialCharacters.currentValue;\r\n    }\r\n    if (hiddenInput) {\r\n      this._maskService.hiddenInput = hiddenInput.currentValue;\r\n    }\r\n    if (showMaskTyped) {\r\n      this._maskService.showMaskTyped = showMaskTyped.currentValue;\r\n    }\r\n    if (shownMaskExpression) {\r\n      this._maskService.shownMaskExpression = shownMaskExpression.currentValue;\r\n    }\r\n    if (showTemplate) {\r\n      this._maskService.showTemplate = showTemplate.currentValue;\r\n    }\r\n    if (clearIfNotMatch) {\r\n      this._maskService.clearIfNotMatch = clearIfNotMatch.currentValue;\r\n    }\r\n    if (validation) {\r\n      this._maskService.validation = validation.currentValue;\r\n    }\r\n    this._applyMask();\r\n  }\r\n\r\n  // tslint:disable-next-line: cyclomatic-complexity\r\n  public validate({ value }: FormControl): ValidationErrors | null {\r\n    if (!this._maskService.validation) {\r\n      return null;\r\n    }\r\n    if (this._maskService.ipError) {\r\n      return { 'Mask error': true };\r\n    }\r\n    if (\r\n      this._maskValue.startsWith('dot_separator') ||\r\n      this._maskValue.startsWith('comma_separator') ||\r\n      this._maskValue.startsWith('separator')\r\n    ) {\r\n      return null;\r\n    }\r\n    if (withoutValidation.includes(this._maskValue)) {\r\n      return null;\r\n    }\r\n    if (this._maskService.clearIfNotMatch) {\r\n      return null;\r\n    }\r\n    if (value && value.toString().length >= 1) {\r\n      let counterOfOpt: number = 0;\r\n      for (const key in this._maskService.maskAvailablePatterns) {\r\n        if (\r\n          this._maskService.maskAvailablePatterns[key].optional &&\r\n          this._maskService.maskAvailablePatterns[key].optional === true\r\n        ) {\r\n          if (this._maskValue.indexOf(key) !== this._maskValue.lastIndexOf(key)) {\r\n            const opt: string = this._maskValue\r\n              .split('')\r\n              .filter((i: string) => i === key)\r\n              .join('');\r\n            counterOfOpt += opt.length;\r\n          } else if (this._maskValue.indexOf(key) !== -1) {\r\n            counterOfOpt++;\r\n          }\r\n          if (\r\n            this._maskValue.indexOf(key) !== -1 &&\r\n            value.toString().length >= this._maskValue.indexOf(key)\r\n          ) {\r\n            return null;\r\n          }\r\n          if (counterOfOpt === this._maskValue.length) {\r\n            return null;\r\n          }\r\n        }\r\n      }\r\n      if (\r\n        this._maskValue.indexOf('*') === 1 ||\r\n        this._maskValue.indexOf('?') === 1 ||\r\n        this._maskValue.indexOf('{') === 1\r\n      ) {\r\n        return null;\r\n      } else if (\r\n        (this._maskValue.indexOf('*') > 1 && value.toString().length < this._maskValue.indexOf('*')) ||\r\n        (this._maskValue.indexOf('?') > 1 && value.toString().length < this._maskValue.indexOf('?'))\r\n      ) {\r\n        return { 'Mask error': true };\r\n      }\r\n      if (this._maskValue.indexOf('*') === -1 || this._maskValue.indexOf('?') === -1) {\r\n        const length: number = this._maskService.dropSpecialCharacters\r\n          ? this._maskValue.length - this._maskService.checkSpecialCharAmount(this._maskValue) - counterOfOpt\r\n          : this._maskValue.length - counterOfOpt;\r\n        if (value.toString().length < length) {\r\n          return { 'Mask error': true };\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  @HostListener('input', ['$event'])\r\n  public onInput(e: CustomKeyboardEvent): void {\r\n    const el: HTMLInputElement = e.target as HTMLInputElement;\r\n    this._inputValue = el.value;\r\n    if (!this._maskValue) {\r\n      this.onChange(el.value);\r\n      return;\r\n    }\r\n    const position: number =\r\n      el.selectionStart === 1\r\n        ? (el.selectionStart as number) + this._maskService.prefix.length\r\n        : (el.selectionStart as number);\r\n    let caretShift: number = 0;\r\n    let backspaceShift: boolean = false;\r\n    this._maskService.applyValueChanges(position, (shift: number, _backspaceShift: boolean) => {\r\n      caretShift = shift;\r\n      backspaceShift = _backspaceShift;\r\n    });\r\n    // only set the selection if the element is active\r\n    if (this.document.activeElement !== el) {\r\n      return;\r\n    }\r\n    this._position = this._position === 1 && this._inputValue.length === 1 ? null : this._position;\r\n    const positionToApply: number = this._position\r\n      ? this._inputValue.length + position + caretShift\r\n      : position + (this._code === 'Backspace' && !backspaceShift ? 0 : caretShift);\r\n    el.setSelectionRange(positionToApply, positionToApply);\r\n    if ((this.maskExpression.includes('H') || this.maskExpression.includes('M')) && caretShift === 0) {\r\n      el.setSelectionRange((el.selectionStart as number) + 1, (el.selectionStart as number) + 1);\r\n    }\r\n    this._position = null;\r\n  }\r\n\r\n  @HostListener('blur')\r\n  public onBlur(): void {\r\n    this._maskService.clearIfNotMatchFn();\r\n    this.onTouch();\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  public onFocus(e: MouseEvent | CustomKeyboardEvent): void {\r\n    const el: HTMLInputElement = e.target as HTMLInputElement;\r\n    const posStart: number = 0;\r\n    const posEnd: number = 0;\r\n    if (\r\n      el !== null &&\r\n      el.selectionStart !== null &&\r\n      el.selectionStart === el.selectionEnd &&\r\n      el.selectionStart > this._maskService.prefix.length &&\r\n      // tslint:disable-next-line\r\n      (e as any).keyCode !== 38\r\n    ) {\r\n      if (this._maskService.showMaskTyped) {\r\n        // We are showing the mask in the input\r\n        this._maskService.maskIsShown = this._maskService.showMaskInInput();\r\n        if (el.setSelectionRange && this._maskService.prefix + this._maskService.maskIsShown === el.value) {\r\n          // the input ONLY contains the mask, so position the cursor at the start\r\n          el.focus();\r\n          el.setSelectionRange(posStart, posEnd);\r\n        } else {\r\n          // the input contains some characters already\r\n          if (el.selectionStart > this._maskService.actualValue.length) {\r\n            // if the user clicked beyond our value's length, position the cursor at the end of our value\r\n            el.setSelectionRange(\r\n              this._maskService.actualValue.length,\r\n              this._maskService.actualValue.length,\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n    const nextValue: string | null =\r\n      !el.value || el.value === this._maskService.prefix\r\n        ? this._maskService.prefix + this._maskService.maskIsShown\r\n        : el.value;\r\n\r\n    /** Fix of cursor position jumping to end in most browsers no matter where cursor is inserted onFocus */\r\n    if (el.value !== nextValue) {\r\n      el.value = nextValue;\r\n    }\r\n\r\n    /** fix of cursor position with prefix when mouse click occur */\r\n    if (((el.selectionStart as number) || (el.selectionEnd as number)) <= this._maskService.prefix.length) {\r\n      el.selectionStart = this._maskService.prefix.length;\r\n      return;\r\n    }\r\n  }\r\n\r\n  @HostListener('keydown', ['$event'])\r\n  public a(e: CustomKeyboardEvent): void {\r\n    this._code = e.code ? e.code : e.key;\r\n    const el: HTMLInputElement = e.target as HTMLInputElement;\r\n    this._inputValue = el.value;\r\n    if (e.keyCode === 38) { // arrow up\r\n      e.preventDefault();\r\n    }\r\n    if (e.keyCode === 37 || e.keyCode === 8) { // backspace or left arrow\r\n      // if (e.keyCode === 37) {\r\n      //     el.selectionStart = (el.selectionEnd as number) - 1;\r\n      // }\r\n      if (e.keyCode === 8 && el.value.length === 0) { // backspace\r\n        el.selectionStart = el.selectionEnd;\r\n      }\r\n      if (e.keyCode === 8 && (el.selectionStart as number) !== 0) { // backspace\r\n        let specialChars: string[] = this._config.specialCharacters;\r\n\r\n        // replace dot from special characters in following type of separator\r\n        if ([Separators.IND_COMMA_SEPARATED.toString(), Separators.INT_COMMA_SEPARATED.toString(),\r\n          Separators.INT_SPACE_SEPARATED.toString(), Separators.INT_APOSTROPHE_SEPARATED.toString()]\r\n          .includes(this.maskExpression)) {\r\n          specialChars = specialChars.filter((f: string) => f !== '.');\r\n        }\r\n        this.specialCharacters = specialChars;\r\n        while (\r\n          this.specialCharacters.includes(this._inputValue[(el.selectionStart as number) - 1].toString())\r\n          ) {\r\n          el.setSelectionRange((el.selectionStart as number) - 1, (el.selectionStart as number) - 1);\r\n        }\r\n      }\r\n      if (\r\n        (el.selectionStart as number) <= this._maskService.prefix.length &&\r\n        (el.selectionEnd as number) <= this._maskService.prefix.length\r\n      ) {\r\n        e.preventDefault();\r\n      }\r\n      const cursorStart: number | null = el.selectionStart;\r\n      // this.onFocus(e);\r\n      if (\r\n        e.keyCode === 8 &&\r\n        !el.readOnly &&\r\n        cursorStart === 0 &&\r\n        el.selectionEnd === el.value.length &&\r\n        el.value.length !== 0\r\n      ) {\r\n        this._position = this._maskService.prefix ? this._maskService.prefix.length : 0;\r\n        this._maskService.applyMask(this._maskService.prefix, this._maskService.maskExpression, this._position);\r\n      }\r\n    }\r\n    this._maskService.selStart = el.selectionStart;\r\n    this._maskService.selEnd = el.selectionEnd;\r\n  }\r\n\r\n  /** It writes the value in the input */\r\n  public async writeValue(inputValue: string | number): Promise<void> {\r\n    if (inputValue === undefined) {\r\n      inputValue = '';\r\n    }\r\n    if (typeof inputValue === 'number') {\r\n      inputValue = String(inputValue);\r\n      inputValue = this._maskValue.startsWith('dot_separator') ? inputValue.replace('.', ',') : inputValue;\r\n      this._maskService.isNumberValue = true;\r\n    }\r\n    (inputValue && this._maskService.maskExpression) ||\r\n    (this._maskService.maskExpression && (this._maskService.prefix || this._maskService.showMaskTyped))\r\n      ? (this._maskService.formElementProperty = [\r\n        'value',\r\n        this._maskService.applyMask(inputValue, this._maskService.maskExpression),\r\n      ])\r\n      : (this._maskService.formElementProperty = ['value', inputValue]);\r\n    this._inputValue = inputValue;\r\n  }\r\n\r\n  // tslint:disable-next-line\r\n  public registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n    this._maskService.onChange = this.onChange;\r\n  }\r\n\r\n  // tslint:disable-next-line\r\n  public registerOnTouched(fn: any): void {\r\n    this.onTouch = fn;\r\n  }\r\n\r\n  /** It disables the input element */\r\n  public setDisabledState(isDisabled: boolean): void {\r\n    this._maskService.formElementProperty = ['disabled', isDisabled];\r\n  }\r\n\r\n  private _repeatPatternSymbols(maskExp: string): string {\r\n    return (\r\n      (maskExp.match(/{[0-9]+}/) &&\r\n        maskExp.split('').reduce((accum: string, currval: string, index: number): string => {\r\n          this._start = currval === '{' ? index : this._start;\r\n\r\n          if (currval !== '}') {\r\n            return this._maskService._findSpecialChar(currval) ? accum + currval : accum;\r\n          }\r\n          this._end = index;\r\n          const repeatNumber: number = Number(maskExp.slice(this._start + 1, this._end));\r\n          const repaceWith: string = new Array(repeatNumber + 1).join(maskExp[this._start - 1]);\r\n          return accum + repaceWith;\r\n        }, '')) ||\r\n      maskExp\r\n    );\r\n  }\r\n\r\n  // tslint:disable-next-line:no-any\r\n  private _applyMask(): any {\r\n    this._maskService.maskExpression = this._repeatPatternSymbols(this._maskValue || '');\r\n    this._maskService.formElementProperty = [\r\n      'value',\r\n      this._maskService.applyMask(this._inputValue, this._maskService.maskExpression),\r\n    ];\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { MaskApplierService } from './mask-applier.service';\r\nimport { IConfig } from './config';\r\n\r\n@Pipe({\r\n    name: 'mask',\r\n    pure: true,\r\n})\r\nexport class MaskPipe implements PipeTransform {\r\n    public constructor(private _maskService: MaskApplierService) {}\r\n\r\n    public transform(value: string | number, mask: string | [string, IConfig['patterns']]): string {\r\n        if (!value && typeof value !== 'number') {\r\n            return '';\r\n        }\r\n        if (typeof mask === 'string') {\r\n            return this._maskService.applyMask(`${value}`, mask);\r\n        }\r\n        return this._maskService.applyMaskWithPattern(`${value}`, mask);\r\n    }\r\n}\r\n","import { config, INITIAL_CONFIG, initialConfig, NEW_CONFIG, optionsConfig } from './config';\r\nimport { MaskApplierService } from './mask-applier.service';\r\nimport { MaskDirective } from './mask.directive';\r\nimport { MaskPipe } from './mask.pipe';\r\nimport { ModuleWithProviders, NgModule } from '@angular/core';\r\n\r\n@NgModule({\r\n    exports: [MaskDirective, MaskPipe],\r\n    declarations: [MaskDirective, MaskPipe],\r\n})\r\nexport class NgxMaskModule {\r\n    public static forRoot(configValue?: optionsConfig | (() => optionsConfig)): ModuleWithProviders {\r\n        return {\r\n            ngModule: NgxMaskModule,\r\n            providers: [\r\n                {\r\n                    provide: NEW_CONFIG,\r\n                    useValue: configValue,\r\n                },\r\n                {\r\n                    provide: INITIAL_CONFIG,\r\n                    useValue: initialConfig,\r\n                },\r\n                {\r\n                    provide: config,\r\n                    useFactory: _configFactory,\r\n                    deps: [INITIAL_CONFIG, NEW_CONFIG],\r\n                },\r\n                MaskApplierService,\r\n            ],\r\n        };\r\n    }\r\n    public static forChild(_configValue?: optionsConfig): ModuleWithProviders {\r\n        return {\r\n            ngModule: NgxMaskModule,\r\n        };\r\n    }\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function _configFactory(\r\n    initConfig: optionsConfig,\r\n    configValue: optionsConfig | (() => optionsConfig)\r\n): optionsConfig {\r\n    return configValue instanceof Function ? { ...initConfig, ...configValue() } : { ...initConfig, ...configValue };\r\n}\r\n"],"names":["InjectionToken","Inject","Injectable","tslib_1.__param","tslib_1.__extends","DOCUMENT","ElementRef","Renderer2","tslib_1.__decorate","Input","HostListener","Directive","NG_VALUE_ACCESSOR","forwardRef","NG_VALIDATORS","Pipe","NgModule"],"mappings":"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"}